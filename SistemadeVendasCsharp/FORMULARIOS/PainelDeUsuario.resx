<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QCQRXhpZgAATU0AKgAAAAgABgESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAAITAAMAAAABAAEAAIKYAAIAAAAhAAAAZgAAAAAAAABI
        AAAAAQAAAEgAAAABTXVoYW1tYWQgUmFoZWVsIHwgRHJlYW1zdGltZS5jb20AAP/bAEMAAgEBAgEBAgIC
        AgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMB
        AgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDP/AABEIACsAKQMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZ
        GiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/
        xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQF
        ITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT
        VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AKf7IX7CHxA/bevf
        EEfgmPRYofDMMct5c6rdtbQl5d/lwoUR2aRhG5+6FAX5mXK58x8eeA9a+FnjbVPDfiTTLrRde0Wc219Z
        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
        SSR//9k=
</value>
  </data>
</root>